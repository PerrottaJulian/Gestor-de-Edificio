// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedBelgrano.Context;

#nullable disable

namespace RedBelgrano.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250513165849_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RedBelgrano.Models.Usuario", b =>
                {
                    b.Property<int>("usuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usuarioId"));

                    b.Property<int>("dni")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("usuarioId");

                    b.ToTable("Usuario");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("RedBelgrano.Models.UsuarioAdmin", b =>
                {
                    b.HasBaseType("RedBelgrano.Models.Usuario");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UsuarioAdmin", (string)null);
                });

            modelBuilder.Entity("RedBelgrano.Models.UsuarioEncargado", b =>
                {
                    b.HasBaseType("RedBelgrano.Models.Usuario");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UsuarioEncargado", (string)null);
                });

            modelBuilder.Entity("RedBelgrano.Models.UsuarioResidente", b =>
                {
                    b.HasBaseType("RedBelgrano.Models.Usuario");

                    b.ToTable("UsuarioPersona", (string)null);
                });

            modelBuilder.Entity("RedBelgrano.Models.UsuarioAdmin", b =>
                {
                    b.HasOne("RedBelgrano.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("RedBelgrano.Models.UsuarioAdmin", "usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RedBelgrano.Models.UsuarioEncargado", b =>
                {
                    b.HasOne("RedBelgrano.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("RedBelgrano.Models.UsuarioEncargado", "usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RedBelgrano.Models.UsuarioResidente", b =>
                {
                    b.HasOne("RedBelgrano.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("RedBelgrano.Models.UsuarioResidente", "usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
